关于快速排序我编的小故事：
dio和jojo在一个很窄的阶梯上，其中阶梯数有限，但高度不一 
jojo和dio每次都往彼此接近的交点走，保证jojo每一步高度都增，dio每一步高度都减，
假如某次接近中jojo的高度高于dio的高度了，高傲的dio会使用the world慢慢儿搬阶梯使得他们的阶梯高度交换，
但是最终他们会在某个阶梯相遇。在开始的时候假如以jojo为参考先发声，则急躁的dio每次会先动，
假如以dio为参考先复活的话，则聪敏的jojo先感知到，jojo先动。相遇后打败了dio，jojo就站在了正确的位置上。
然后轮回（递归）地重复上面的故事，直到jojo完结为止
（此时所有jojo回到了他们正确地位置上，按辈分从前往后做出了各自的jojo立）
完 
#include<stdio.h>

void quicksort(int left,int right);

int a[100],n;

int main()
{
	int i,j;
	scanf("%d",&n);
	for(i=1;i=n;i++){
		scanf("%d",&a[i]);
	}
	quicksort(1,n);
	for(i=1;i<=n;i++){
		printf("%d ",a[i]);
	}
	return 0;
}

void quicksort(int left,int right){
	int i,j,index,t;
	if(left>right){
		return;
	}
	i=left;
	j=right;
	index=a[left];
	while(i!=j){
		while(a[j]<=index&&i<j){
			j--;
		}
		while(a[i]>=index&&i<j){
			i++;
		}
		if(i!=j){
			t=a[i];
			a[i]=a[j];
			a[j]=t;
		}
	}
	a[left]=a[i];
	a[i]=index;
	quicksort(i+1,right);
	quicksort(left,i-1);
}
